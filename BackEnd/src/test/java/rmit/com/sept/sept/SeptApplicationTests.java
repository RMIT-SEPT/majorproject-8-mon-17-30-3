package rmit.com.sept.sept;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.List;

import org.junit.Assert;
import org.junit.Before;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.servlet.ModelAndView;

import rmit.com.sept.sept.controller.AuthenticationController;
import rmit.com.sept.sept.repository.BookingRepository;
import rmit.com.sept.sept.service.BookingService;

@SpringBootTest
class SeptApplicationTests extends AbstractTest {

	private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
	private final ByteArrayOutputStream errContent = new ByteArrayOutputStream();
	private final PrintStream originalOut = System.out;
	private final PrintStream originalErr = System.err;
	private BookingRepository bookingRepository;

	@Autowired
	private BookingService service;

	@Test
	void contextLoads() {
	}
	
	

	@Override
	@Before
	public void setUp(){
		super.setUp();
	}

	/*
	 * Check If the autogenerated id is not zero when a booking is created
	 * */
	@Test
	public void checkIfBookingIDNotZero_whenBookingCreated(){
		Booking booking = new Booking();
		booking.setUserId(2);
		booking.setServiceName("Some Service");
//		BookingService service = new BookingServiceImpl();
//		service.createBooking(booking);
		//assertNotNull(booking.getBookingId());
		assertNotEquals(1, booking.getBookingId());
	}

	/*
	 * Check if booking status is "Valid" once a booking is created
	 * */
	@Test
	public void checkIfBookingStatusValid_whenBookingCreated(){
		Booking booking = new Booking();
		booking.setServiceName("Some Booking");
		booking.setUserId(1);
		//BookingService service = new BookingServiceImpl();
		//service.createBooking(booking);
		booking.setStatus("Valid");
		//assertNotNull(booking.getServiceName());
		assertEquals("Valid", booking.getStatus());
	}

	/*
	 * Check if Booking Id Zero, stating not created, when service name is "null"
	 * */
	@Test
	public void checkIfBookingIdZero_whenServiceNameNull(){
		Booking booking = new Booking();
		booking.setServiceName(null);
		assertEquals(0, booking.getBookingId());
	}



	@Test
	void checkBookingSize() {
		Booking booking = new Booking(1,1,"1/02/2020", "12:24", "Barbar", "Prabhav");
		service.createBooking(booking);

		List<Booking> bookingList = service.getAllBookings();
		System.out.println(bookingList.size());
		assertEquals(1, bookingList.size());
	}



	@Test
	void checkUser() {
		User user = new User();
		String expected = "Prabhav";
		user.setName(expected);
		assertEquals(expected, user.getName());
	}
	@Test
	void service_Booking() {
		String workerName = "Jack";
		Booking booking = new Booking(1,1,"1/02/2020", "12:24", "Barbar", workerName);
		assertEquals(workerName, booking.getWorkerName());
	}

}
